# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'compound_bow_test_software.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys

import cv2
import PyQt5
from PyQt5 import QtCore, QtGui, QtWidgets
from datetime import datetime
from plotting import plot, execute


class Ui_BowAnalyzer(object):
    def setupUi(self, BowAnalyzer):
        BowAnalyzer.setObjectName("BowAnalyzer")
        BowAnalyzer.resize(1360, 700)
        self.centralwidget = QtWidgets.QWidget(BowAnalyzer)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 501, 431))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.cam1 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.cam1.setContentsMargins(0, 0, 0, 0)
        self.cam1.setObjectName("cam1")
        self.cam1_lbl = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.cam1_lbl.setText("")
        self.cam1_lbl.setObjectName("cam1_lbl")
        self.cam1.addWidget(self.cam1_lbl)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(830, 10, 461, 431))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.cam2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.cam2.setContentsMargins(0, 0, 0, 0)
        self.cam2.setObjectName("cam2")
        self.cam2_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.cam2_lbl.setText("")
        self.cam2_lbl.setObjectName("cam2_lbl")
        self.cam2.addWidget(self.cam2_lbl)
        self.start_btn = QtWidgets.QPushButton(self.centralwidget)
        self.start_btn.setGeometry(QtCore.QRect(630, 120, 75, 23))
        self.start_btn.setObjectName("start_btn")
        self.stop_btn = QtWidgets.QPushButton(self.centralwidget)
        self.stop_btn.setGeometry(QtCore.QRect(630, 260, 75, 23))
        self.stop_btn.setObjectName("stop_btn")
        self.stop_btn.clicked.connect(self.stop_feed)
        self.stop_btn.clicked.connect(self.stop_feed_2)
        BowAnalyzer.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(BowAnalyzer)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1360, 21))
        self.menubar.setObjectName("menubar")
        BowAnalyzer.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(BowAnalyzer)
        self.statusbar.setObjectName("statusbar")
        BowAnalyzer.setStatusBar(self.statusbar)

        self.worker1 = worker1()
        self.worker1.start()
        self.worker1.imageupdate.connect(self.ImageUpdateSlot)

        self.worker2 = worker2()
        self.worker2.start()
        self.worker2.imageupdate_2.connect(self.ImageUpdateSlot_2)

        self.retranslateUi(BowAnalyzer)
        QtCore.QMetaObject.connectSlotsByName(BowAnalyzer)
        # self.setLayout(self.cam1)

    def ImageUpdateSlot(self, Image):
        self.cam1_lbl.setPixmap(QtGui.QPixmap.fromImage(Image))

    def ImageUpdateSlot_2(self, Image):
        self.cam2_lbl.setPixmap(QtGui.QPixmap.fromImage(Image))
    
    def stop_feed(self):
        self.worker1.stop()

    def stop_feed_2(self):
        self.worker2.stop()

    def retranslateUi(self, BowAnalyzer):
        _translate = QtCore.QCoreApplication.translate
        BowAnalyzer.setWindowTitle(_translate("BowAnalyzer", "Bow Analyzer"))
        self.start_btn.setText(_translate("BowAnalyzer", "Start Feed"))
        self.stop_btn.setText(_translate("BowAnalyzer", "Stop Feed"))

class worker1(QtCore.QThread):
    imageupdate = QtCore.pyqtSignal(QtGui.QImage)
    def run(self):
        self.threadactive = True
        capture = cv2.VideoCapture(1)
        fourcc = cv2.VideoWriter_fourcc(*'XVID')
        save_cam1 = cv2.VideoWriter('D:\Hexdyna_projects\Bow_software\CAM-1.avi',fourcc,20.0,(640,480))
        while self.threadactive:
            ret, frame = capture.read()
            if ret:
                image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                flipped_image = cv2.flip(image, 1)
                qt_image = QtGui.QImage(flipped_image.data, flipped_image.shape[1], flipped_image.shape[0], QtGui.QImage.Format_RGB888)
                pic = qt_image.scaled(640, 480, QtCore.Qt.KeepAspectRatio)
                self.imageupdate.emit(pic)
                save_cam1.write(flipped_image)
    
    def stop(self):
        self.threadactive = False
        self.quit()

class worker2(QtCore.QThread):
    imageupdate_2 = QtCore.pyqtSignal(QtGui.QImage)
    def run(self):
        self.threadactive_2 = True
        capture_2 = cv2.VideoCapture(2)
        fourcc = cv2.VideoWriter_fourcc(*'XVID')
        save_cam2 = cv2.VideoWriter('D:\Hexdyna_projects\Bow_software\CAM-2.avi',fourcc,20.0,(640,480))
        while self.threadactive_2:
            ret_2, frame_2 = capture_2.read()
            if ret_2:
                image_2 = cv2.cvtColor(frame_2, cv2.COLOR_BGR2RGB)
                flipped_image_2 = cv2.flip(image_2, 1)
                qt_image_2 = QtGui.QImage(flipped_image_2.data, flipped_image_2.shape[1], flipped_image_2.shape[0], QtGui.QImage.Format_RGB888)
                pic_2 = qt_image_2.scaled(640, 480, QtCore.Qt.KeepAspectRatio)
                self.imageupdate_2.emit(pic_2)
                save_cam2.write(flipped_image_2)
    
    def stop(self):
        self.threadactive_2 = False
        self.quit()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BowAnalyzer = QtWidgets.QMainWindow()
    ui = Ui_BowAnalyzer()
    ui.setupUi(BowAnalyzer)
    BowAnalyzer.show()
    # execute(
    sys.exit(app.exec_())
